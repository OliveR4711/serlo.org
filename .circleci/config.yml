js: &js
  docker:
    - image: circleci/node:10

php: &php
  docker:
    - image: circleci/php:7.0.33

yarn_restore_cache: &yarn_restore_cache
  keys:
    - yarn-v1-{{ checksum "yarn.lock" }}
    - yarn-v1-
yarn_save_cache: &yarn_save_cache
  key: yarn-v1-{{ checksum "yarn.lock" }}
  paths:
    - ~/.cache/yarn
yarn_install: &yarn_install
  command: yarn --frozen-lockfile

composer_restore_cache: &composer_restore_cache
  keys:
    - composer-v1-{{ checksum "packages/public/server/composer.lock" }}
    - composer-v1-
composer_save_cache: &composer_save_cache
  key: composer-v1-{{ checksum "packages/public/server/composer.lock" }}
  paths:
    - ./packages/public/server/src/vendor
composer_install: &composer_install
  command: (cd packages/public/server && composer install --no-interaction --dev --prefer-dist)

composer_dev_restore_cache: &composer_dev_restore_cache
  keys:
    - composer-v1-{{ checksum "packages/public/server/dev-tools/composer.lock" }}
    - composer-v1-
composer_dev_save_cache: &composer_dev_save_cache
  key: composer-v1-{{ checksum "packages/public/server/dev-tools/composer.lock" }}
  paths:
    - ./packages/public/server/dev-tools/vendor
composer_dev_install: &composer_dev_install
  command: (cd packages/public/server/dev-tools && composer install --no-interaction --dev --prefer-dist)

gcloud: &gcloud
  command: |
    sudo apt update -y
    sudo apt install -y lsb-release
    export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
    echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    sudo apt update -y && sudo apt install google-cloud-sdk -y
    echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-

cloudflare_secret: &cloudflare_secret
  command: |
    echo "{ \"email\": \"$CLOUDFLARE_EMAIL\", \"key\": \"$CLOUDFLARE_KEY\" }" >> packages/private/cloudflare/cloudflare.secret.json

version: 2.1
jobs:
  build:
    <<: *js
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          <<: *yarn_restore_cache
      - run:
          <<: *yarn_install
      - save_cache:
          <<: *yarn_save_cache
      - run:
          command: yarn build
  js-lint:
    <<: *js
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_restore_cache
      - run:
          <<: *yarn_install
      - save_cache:
          <<: *yarn_save_cache
      - run:
          command: yarn lint:js
  js-test:
    <<: *js
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_restore_cache
      - run:
          <<: *yarn_install
      - save_cache:
          <<: *yarn_save_cache
      - run:
          command: yarn test:js
  php-lint:
    <<: *php
    steps:
      - checkout
      - restore_cache:
          <<: *composer_dev_restore_cache
      - run:
          <<: *composer_dev_install
      - save_cache:
          <<: *composer_dev_save_cache
      - run:
          command: (cd packages/public/server && dev-tools/vendor/bin/php-cs-fixer fix --config=php-cs-fixer.config.php --dry-run)
  php-test:
    <<: *php
    steps:
      - checkout
      - restore_cache:
          <<: *composer_restore_cache
      - run:
          <<: *composer_install
      - save_cache:
          <<: *composer_save_cache
      - run:
          command: (cd packages/public/server && src/vendor/bin/phpunit)
  deploy-cloudflare:
    <<: *js
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_restore_cache
      - run:
          <<: *yarn_install
      - save_cache:
          <<: *yarn_save_cache
      - run:
          <<: *cloudflare_secret
      - run:
          command: yarn deploy --scope=@serlo/cloudflare-workers
  deploy-serlo-assets:
    <<: *js
    steps:
      - checkout
      - run:
          <<: *gcloud
      - run:
          <<: *cloudflare_secret
      - restore_cache:
          <<: *yarn_restore_cache
      - run:
          <<: *yarn_install
      - save_cache:
          <<: *yarn_save_cache
      - run:
          command: yarn deploy --scope=@serlo/{athene2-assets,static-assets}
  deploy-serlo-containers:
    <<: *js
    steps:
      - checkout
      - run:
          <<: *gcloud
      - setup_remote_docker
      - restore_cache:
          <<: *yarn_restore_cache
      - run:
          <<: *yarn_install
      - save_cache:
          <<: *yarn_save_cache
      - run:
          command: yarn deploy --scope=@serlo/{editor-renderer,legacy-editor-renderer,server}
  sentry-release:
    <<: *js
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_restore_cache
      - run:
          <<: *yarn_install
      - save_cache:
          <<: *yarn_save_cache
      - run:
          command: yarn sentry-release

workflows:
  version: 2
  workflow:
    jobs:
      - build
      - js-lint
      - js-test
      - php-lint
      - php-test
      - deploy-cloudflare:
          context: cloudflare
          filters:
            branches:
              only: master
          requires:
            - build
            - js-lint
            - js-test
            - php-lint
            - php-test
      - deploy-serlo-assets:
          context: serlo-assets
          filters:
            branches:
              only: master
          requires:
            - build
            - js-lint
            - js-test
            - php-lint
            - php-test
      - deploy-serlo-containers:
          context: serlo-containers
          filters:
            branches:
              only: master
          requires:
            - build
            - js-lint
            - js-test
            - php-lint
            - php-test
      - sentry-release:
          context: sentry
          filters:
            branches:
              only: master
          requires:
            - deploy-cloudflare
            - deploy-serlo-assets
            - deploy-serlo-containers
